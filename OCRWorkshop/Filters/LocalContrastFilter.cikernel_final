//
//  LocalContrastFilter.cikernel
//  PokeScanPreprocessing
//
//  Created by Victor Pavlychko on 7/21/19.
//  Copyright Â© 2019 Victor Pavlychko. All rights reserved.
//

kernel vec4 local_contrast_kernel(sampler image) {
    vec2 dstCoord = destCoord();
    vec2 srcCoord = samplerTransform(image, dstCoord);

    float box = 2.0;
    float box_size = (box * 2.0 + 1.0) * (box * 2.0 + 1.0);

    float cutoff = 0.75;
    float noise = 0.05;
    float contrast_scale = 3.0;
    float contrast_shift = 1.0 - 1.0 / contrast_scale;

    float min_value = 1.0;
    float max_value = 0.0;
    float average_value = 0.0;

    for (float i = -box; i <= box; ++i) {
        for (float j = -box; j <= box; ++j) {
            vec2 coord = samplerTransform(image, dstCoord + vec2(i, j));
            float value = sample(image, coord).r;
            min_value = min(min_value, value);
            max_value = max(max_value, value);
            average_value += value;
        }
    }

    average_value = average_value / box_size;

    float v;
    if (max_value < cutoff) {
        v = 0;
    } else if (min_value > cutoff) {
        v = 1;
    } else if (max_value - min_value > noise) {
        v = (sample(image, srcCoord).r - min_value) / (max_value - min_value);
        v = v * contrast_scale - contrast_shift;
        if (v < 0) {
            v = 0;
        } else if (v > 1) {
            v = 1;
        }
    } else if (average_value < cutoff) {
        v = 0;
    } else {
        v = 1;
    }

    return vec4(v, v, v, 1);
}
